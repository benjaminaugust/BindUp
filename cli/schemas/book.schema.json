{
  "title": "Book",
  "$id": "book",
  "description": "A global book configuration object.",
  "type": "object",
  "required": [
    "title",
    "author",
    "formats",
    "manuscript"
  ],
  "properties": {
    "manuscript": {
      "description": "The relative path to the manuscript folder.",
      "type":"string"
    },
    "indentParagraphs": {
      "description": "The amount, in pixels, to indent paragraphs. Do not use if you're adding your own styles with the css property.",
      "type":"number"
    },
    "outDir": {
      "description": "The relative path to export the book to.",
      "type":"string"
    },
    "formats": {
      "description": "An array of formats you want to print your book in (epub only as of now).",
      "type":"array",
      "items": {
        "type": "string"
      }
    },
    "title": {
      "description": "The title of the book.",
      "type": "string"
    },
    "author": {
      "description": "The author of the book.",
      "type": ["array", "string"],
      "items": {
        "type":"string"
      }
    },
    "description": {
      "description": "The description of the book.",
      "type": "string"
    },
    "publisher": {
      "description": "The publisher of the book.",
      "type": "string"
    },
    "coverPath": {
      "description": "The path to the book cover (jpg, png).",
      "type": "string"
    },
    "tocInTOC": {
      "description": "(Default true) Whether to show TOC entry in the reader's Table of Contents; only for EPUB2.",
      "type": "boolean"
    },
    "numberChaptersInTOC": {
      "description": "(Default false) Whether to number the items in the Table of Contents.",
      "type": "boolean"
    },
    "prependChapterTitles": {
      "description": "(Default true) Whether to automatically number entries in TOC.",
      "type": "boolean"
    },
    "date": {
      "description": "(Defaults to today) Publication date",
      "type": "string"
    },
    "lang": {
      "description": "(Defaults to en) The book's language as an ISO language code.",
      "type": "string"
    },
    "css": {
      "description": "A CSS string that overrides default styles.",
      "type": "string"
    },
    "cssFile": {
      "description": "The path to a CSS file.",
      "type": "string"
    },
    "defaultFontFamily": {
      "type": "string",
      "description": "The default font family of every paragraph in the book. Ex: Georgia, serif"
    },
    "tocFontFamily": {
      "type": "string",
      "description": "The default font family of the table of contents. Ex: Georgia, serif"
    },
    "headingFontFamilies": {
      "type": "array",
      "description": "An array of font family objects that style headings.",
      "items": {
        "type":"object",
        "properties": {
          "headingLevel": {"type":"string"},
          "fontFamily": {"type":"string"}
        },
        "required": [
          "headingLevel",
          "fontFamily"
        ]
      }
    },
    "fontClasses": {
      "description": "An array of objects describing classes you want to wrap text in. Use `<span class='className'>text</span>` to change the font of any text to whatever font you've associated with that class.",
      "type": "array",
      "items": {
        "type":"object",
        "properties": {
          "className": {"type":"string"},
          "fontFamily": {"type":"string"}
        },
        "required": [
          "className",
          "fontFamily"
        ]
      }
    },
    "fonts": {
      "description": "Array of fonts to include with the epub file. These fonts will be available to the epub. Useful if you want to use custom fonts",
      "type": "array",
      "items": {
        "type":"object",
        "properties": {
          "filename": {"type":"string"},
          "url": {"type":"string"}
        }
      }
    },
    "epubVersion": {
      "description": "(Default 3) Either 3 or 2. The release version of EPUB to render your book to.",
      "type": "number"
    },
    "fetchTimeout": {
      "description": "(Default 2000) Timeout time for requests, in milliseconds; Browsers need to support AbortController and signals for this to work.",
      "type": "number"
    },
    "retryTimes": {
      "description": "(Default 3) How many times to retry fetching resources.",
      "type": "number"
    },
    "batchSize": {
      "description": "(Default 100) The size of the batches to use when downloading files.",
      "type": "number"
    },
    "ignoreFailedDownloads": {
      "description": "(Default false) Instead of throwing, emit a warning and write an empty file if a font or image fails to download.",
      "type": "boolean"
    },
    "verbose": {
      "description": "(Default false) Whether to log progress messages; If a function is provided, the first argument will either be 'log' or 'warn'.",
      "type": "boolean"
    }
  }
}